package main

import (
	"encoding/hex"
	"fmt"
	"os"

	"github.com/smartbch/moeingaot/maot"
)

// g++ -fPIC -std=c++17 -I ../../moeingevm/evmwrap/evmone.release/ -I ../../moeingevm/evmwrap/evmc/include/ -I ../../moeingevm/evmwrap/intx/include -I ../../moeingevm/evmwrap/keccak/include -c contract.cpp
// g++ -std=c++17 -fPIC -I ../../moeingevm/evmwrap/evmone.release/ -I ../../moeingevm/evmwrap/evmc/include/ -I ../../moeingevm/evmwrap/intx/include -I ../../moeingevm/evmwrap/keccak/include -c instrexe.cpp
// g++ -shared -o libaot.so ../util/keccak/src/keccak.o instrexe.o contract.o

var codeHex = "608060405234801561001057600080fd5b50600436106100365760003560e01c8063653721471461003b578063677342ce14610059575b600080fd5b610043610075565b6040516100509190610114565b60405180910390f35b610073600480360381019061006e9190610160565b61007b565b005b60005481565b600060038211156100e2578190506000600160028461009a91906101eb565b6100a4919061021c565b90505b818110156100dc5780915060028182856100c191906101eb565b6100cb919061021c565b6100d591906101eb565b90506100a7565b506100f0565b600082146100ef57600190505b5b806000819055505050565b6000819050919050565b61010e816100fb565b82525050565b60006020820190506101296000830184610105565b92915050565b600080fd5b61013d816100fb565b811461014857600080fd5b50565b60008135905061015a81610134565b92915050565b6000602082840312156101765761017561012f565b5b60006101848482850161014b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101f6826100fb565b9150610201836100fb565b9250826102115761021061018d565b5b828204905092915050565b6000610227826100fb565b9150610232836100fb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610267576102666101bc565b5b82820190509291505056fea26469706673582212200e03c4ad7c4f84434e5637f8f06d34c1debad3c67774e1a0ab6aa3354b5d2a3064736f6c634300080d0033"

func main() {
	if len(os.Args) < 2 {
		fmt.Printf("Usage: %s demo|instrexe|gen\n", os.Args[0])
		return
	}
	if os.Args[1] == "instrexe" {
		maot.DumpInstrExeFiles(".")
	} else if os.Args[1] == "demo" {
		code, _ := hex.DecodeString(codeHex)
		maot.CodeToFile(maot.EVMC_ISTANBUL, code, "contract", "contract.cpp")
	} else if os.Args[1] == "gen" {
		if len(os.Args) != 4 {
			fmt.Printf("Usage: %s gen <input-dir> <output-dir>\n", os.Args[0])
			return
		}
		maot.AotCompile(maot.EVMC_ISTANBUL, os.Args[2], os.Args[3])
	} else {
		fmt.Printf("Usage: %s demo|instrexe|gen\n", os.Args[0])
	}
}
